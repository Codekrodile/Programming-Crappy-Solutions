;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-07-05 02:46:26
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x1000 -- 0x1001
; data inside code section at 0x1001 -- 0x1002
0x1001:   0f                                                 |.               |
; function: function_1002 at 0x1002 -- 0x1024
0x1002:   1e                     	push ds
0x1003:   fb                     	sti 
0x1004:   53                     	push ebx
0x1005:   83 ec 08               	sub esp, 8
0x1008:   e8 03 01 00 00         	call 0x1110 <__x86.get_pc_thunk.bx>
0x100d:   81 c3 b7 2f 00 00      	add ebx, 0x2fb7
0x1013:   8b 83 28 00 00 00      	mov eax, dword ptr [ebx + 0x28]
0x1019:   85 c0                  	test eax, eax
0x101b:   74 02                  	je 0x101f <function_1002+0x1d>
0x101d:   ff d0                  	call eax
0x101f:   83 c4 08               	add esp, 8
0x1022:   5b                     	pop ebx
0x1023:   c3                     	ret 
; section: .plt
; data inside code section at 0x1030 -- 0x1080
0x1030:   ff b3 04 00 00 00 ff a3  08 00 00 00 0f 1f 40 00   |..............@.|
0x1040:   f3 0f 1e fb 68 00 00 00  00 e9 e2 ff ff ff 66 90   |....h.........f.|
0x1050:   f3 0f 1e fb 68 08 00 00  00 e9 d2 ff ff ff 66 90   |....h.........f.|
0x1060:   f3 0f 1e fb 68 10 00 00  00 e9 c2 ff ff ff 66 90   |....h.........f.|
0x1070:   f3 0f 1e fb 68 18 00 00  00 e9 b2 ff ff ff 66 90   |....h.........f.|
; section: .plt.got
; function: function_1080 at 0x1080 -- 0x1081
; data inside code section at 0x1081 -- 0x1082
0x1081:   0f                                                 |.               |
; function: function_1082 at 0x1082 -- 0x108a
0x1082:   1e                     	push ds
0x1083:   fb                     	sti 
0x1084:   ff a3 24 00 00 00      	jmp dword ptr [ebx + 0x24]
; data inside code section at 0x108a -- 0x1090
0x108a:   66 0f 1f 44 00 00                                  |f..D..          |
; section: .plt.sec
; function: function_1090 at 0x1090 -- 0x1091
; data inside code section at 0x1091 -- 0x1092
0x1091:   0f                                                 |.               |
; function: function_1092 at 0x1092 -- 0x109a
0x1092:   1e                     	push ds
0x1093:   fb                     	sti 
0x1094:   ff a3 0c 00 00 00      	jmp dword ptr [ebx + 0xc]
; data inside code section at 0x109a -- 0x10a0
0x109a:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_10a0 at 0x10a0 -- 0x10a1
; data inside code section at 0x10a1 -- 0x10a2
0x10a1:   0f                                                 |.               |
; function: function_10a2 at 0x10a2 -- 0x10aa
0x10a2:   1e                     	push ds
0x10a3:   fb                     	sti 
0x10a4:   ff a3 10 00 00 00      	jmp dword ptr [ebx + 0x10]
; data inside code section at 0x10aa -- 0x10b0
0x10aa:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_10b0 at 0x10b0 -- 0x10b1
; data inside code section at 0x10b1 -- 0x10b2
0x10b1:   0f                                                 |.               |
; function: function_10b2 at 0x10b2 -- 0x10ba
0x10b2:   1e                     	push ds
0x10b3:   fb                     	sti 
0x10b4:   ff a3 14 00 00 00      	jmp dword ptr [ebx + 0x14]
; data inside code section at 0x10ba -- 0x10c0
0x10ba:   66 0f 1f 44 00 00                                  |f..D..          |
; function: function_10c0 at 0x10c0 -- 0x10c1
; data inside code section at 0x10c1 -- 0x10c2
0x10c1:   0f                                                 |.               |
; function: function_10c2 at 0x10c2 -- 0x10ca
0x10c2:   1e                     	push ds
0x10c3:   fb                     	sti 
0x10c4:   ff a3 18 00 00 00      	jmp dword ptr [ebx + 0x18]
; data inside code section at 0x10ca -- 0x10d0
0x10ca:   66 0f 1f 44 00 00                                  |f..D..          |
; section: .text
; function: _start at 0x10d0 -- 0x10d1
; data inside code section at 0x10d1 -- 0x10d2
0x10d1:   0f                                                 |.               |
; function: function_10d2 at 0x10d2 -- 0x1106
0x10d2:   1e                     	push ds
0x10d3:   fb                     	sti 
0x10d4:   31 ed                  	xor ebp, ebp
0x10d6:   5e                     	pop esi
0x10d7:   89 e1                  	mov ecx, esp
0x10d9:   83 e4 f0               	and esp, 0xfffffff0
0x10dc:   50                     	push eax
0x10dd:   54                     	push esp
0x10de:   52                     	push edx
0x10df:   e8 22 00 00 00         	call 0x1106 <function_1106>
0x10e4:   81 c3 e0 2e 00 00      	add ebx, 0x2ee0
0x10ea:   8d 83 4c d3 ff ff      	lea eax, [ebx - 0x2cb4]
0x10f0:   50                     	push eax
0x10f1:   8d 83 dc d2 ff ff      	lea eax, [ebx - 0x2d24]
0x10f7:   50                     	push eax
0x10f8:   51                     	push ecx
0x10f9:   56                     	push esi
0x10fa:   ff b3 34 00 00 00      	push dword ptr [ebx + 0x34]
0x1100:   e8 bb ff ff ff         	call 0x10c0 <function_10c0>
0x1105:   f4                     	hlt 
; function: function_1106 at 0x1106 -- 0x110a
0x1106:   8b 1c 24               	mov ebx, dword ptr [esp]
0x1109:   c3                     	ret 
; data inside code section at 0x110a -- 0x1110
0x110a:   66 90 66 90 66 90                                  |f.f.f.          |
; function: __x86.get_pc_thunk.bx at 0x1110 -- 0x1114
0x1110:   8b 1c 24               	mov ebx, dword ptr [esp]
0x1113:   c3                     	ret 
; data inside code section at 0x1114 -- 0x1120
0x1114:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x1120 -- 0x1159
0x1120:   e8 e4 00 00 00         	call 0x1209 <__x86.get_pc_thunk.dx>
0x1125:   81 c2 9f 2e 00 00      	add edx, 0x2e9f
0x112b:   8d 8a 44 00 00 00      	lea ecx, [edx + 0x44]
0x1131:   8d 82 44 00 00 00      	lea eax, [edx + 0x44]
0x1137:   39 c8                  	cmp eax, ecx
0x1139:   74 1d                  	je 0x1158 <deregister_tm_clones+0x38>
0x113b:   8b 82 1c 00 00 00      	mov eax, dword ptr [edx + 0x1c]
0x1141:   85 c0                  	test eax, eax
0x1143:   74 13                  	je 0x1158 <deregister_tm_clones+0x38>
0x1145:   55                     	push ebp
0x1146:   89 e5                  	mov ebp, esp
0x1148:   83 ec 14               	sub esp, 0x14
0x114b:   51                     	push ecx
0x114c:   ff d0                  	call eax
0x114e:   83 c4 10               	add esp, 0x10
0x1151:   c9                     	leave 
0x1152:   c3                     	ret 
; data inside code section at 0x1153 -- 0x1158
0x1153:   8d 74 26 00 90                                     |.t&..           |
0x1158:   c3                     	ret 
; data inside code section at 0x1159 -- 0x1160
0x1159:   8d b4 26 00 00 00 00                               |..&....         |
; function: register_tm_clones at 0x1160 -- 0x11a7
0x1160:   e8 a4 00 00 00         	call 0x1209 <__x86.get_pc_thunk.dx>
0x1165:   81 c2 5f 2e 00 00      	add edx, 0x2e5f
0x116b:   55                     	push ebp
0x116c:   89 e5                  	mov ebp, esp
0x116e:   53                     	push ebx
0x116f:   8d 8a 44 00 00 00      	lea ecx, [edx + 0x44]
0x1175:   8d 82 44 00 00 00      	lea eax, [edx + 0x44]
0x117b:   83 ec 04               	sub esp, 4
0x117e:   29 c8                  	sub eax, ecx
0x1180:   89 c3                  	mov ebx, eax
0x1182:   c1 e8 1f               	shr eax, 0x1f
0x1185:   c1 fb 02               	sar ebx, 2
0x1188:   01 d8                  	add eax, ebx
0x118a:   d1 f8                  	sar eax, 1
0x118c:   74 14                  	je 0x11a2 <register_tm_clones+0x42>
0x118e:   8b 92 38 00 00 00      	mov edx, dword ptr [edx + 0x38]
0x1194:   85 d2                  	test edx, edx
0x1196:   74 0a                  	je 0x11a2 <register_tm_clones+0x42>
0x1198:   83 ec 08               	sub esp, 8
0x119b:   50                     	push eax
0x119c:   51                     	push ecx
0x119d:   ff d2                  	call edx
0x119f:   83 c4 10               	add esp, 0x10
0x11a2:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x11a5:   c9                     	leave 
0x11a6:   c3                     	ret 
; data inside code section at 0x11a7 -- 0x11b0
0x11a7:   8d b4 26 00 00 00 00 66  90                        |..&....f.       |
; function: __do_global_dtors_aux at 0x11b0 -- 0x11b1
; data inside code section at 0x11b1 -- 0x11b2
0x11b1:   0f                                                 |.               |
; function: function_11b2 at 0x11b2 -- 0x11fb
0x11b2:   1e                     	push ds
0x11b3:   fb                     	sti 
0x11b4:   55                     	push ebp
0x11b5:   89 e5                  	mov ebp, esp
0x11b7:   53                     	push ebx
0x11b8:   e8 53 ff ff ff         	call 0x1110 <__x86.get_pc_thunk.bx>
0x11bd:   81 c3 07 2e 00 00      	add ebx, 0x2e07
0x11c3:   83 ec 04               	sub esp, 4
0x11c6:   80 bb 44 00 00 00 00   	cmp byte ptr [ebx + 0x44], 0
0x11cd:   75 27                  	jne 0x11f6 <function_11b2+0x44>
0x11cf:   8b 83 24 00 00 00      	mov eax, dword ptr [ebx + 0x24]
0x11d5:   85 c0                  	test eax, eax
0x11d7:   74 11                  	je 0x11ea <function_11b2+0x38>
0x11d9:   83 ec 0c               	sub esp, 0xc
0x11dc:   ff b3 40 00 00 00      	push dword ptr [ebx + 0x40]
0x11e2:   e8 99 fe ff ff         	call 0x1080 <function_1080>
0x11e7:   83 c4 10               	add esp, 0x10
0x11ea:   e8 31 ff ff ff         	call 0x1120 <deregister_tm_clones>
0x11ef:   c6 83 44 00 00 00 01   	mov byte ptr [ebx + 0x44], 1
0x11f6:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x11f9:   c9                     	leave 
0x11fa:   c3                     	ret 
; data inside code section at 0x11fb -- 0x1200
0x11fb:   8d 74 26 00 90                                     |.t&..           |
; function: frame_dummy at 0x1200 -- 0x1201
; data inside code section at 0x1201 -- 0x1202
0x1201:   0f                                                 |.               |
; function: function_1202 at 0x1202 -- 0x1209
0x1202:   1e                     	push ds
0x1203:   fb                     	sti 
0x1204:   e9 57 ff ff ff         	jmp 0x1160 <register_tm_clones>
; function: __x86.get_pc_thunk.dx at 0x1209 -- 0x120d
0x1209:   8b 14 24               	mov edx, dword ptr [esp]
0x120c:   c3                     	ret 
; function: main at 0x120d -- 0x120e
; data inside code section at 0x120e -- 0x120f
0x120e:   0f                                                 |.               |
; function: function_120f at 0x120f -- 0x1297
0x120f:   1e                     	push ds
0x1210:   fb                     	sti 
0x1211:   55                     	push ebp
0x1212:   89 e5                  	mov ebp, esp
0x1214:   53                     	push ebx
0x1215:   81 ec 04 01 00 00      	sub esp, 0x104
0x121b:   e8 f0 fe ff ff         	call 0x1110 <__x86.get_pc_thunk.bx>
0x1220:   81 c3 a4 2d 00 00      	add ebx, 0x2da4
0x1226:   8b 83 2c 00 00 00      	mov eax, dword ptr [ebx + 0x2c]
0x122c:   8b 00                  	mov eax, dword ptr [eax]
0x122e:   6a 00                  	push 0
0x1230:   50                     	push eax
0x1231:   e8 5a fe ff ff         	call 0x1090 <function_1090>
0x1236:   83 c4 08               	add esp, 8
0x1239:   8b 83 30 00 00 00      	mov eax, dword ptr [ebx + 0x30]
0x123f:   8b 00                  	mov eax, dword ptr [eax]
0x1241:   6a 00                  	push 0
0x1243:   50                     	push eax
0x1244:   e8 47 fe ff ff         	call 0x1090 <function_1090>
0x1249:   83 c4 08               	add esp, 8
0x124c:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x1252:   8b 00                  	mov eax, dword ptr [eax]
0x1254:   6a 00                  	push 0
0x1256:   50                     	push eax
0x1257:   e8 34 fe ff ff         	call 0x1090 <function_1090>
0x125c:   83 c4 08               	add esp, 8
0x125f:   c7 45 f8 78 56 34 12   	mov dword ptr [ebp - 8], 0x12345678
0x1266:   8d 85 f8 fe ff ff      	lea eax, [ebp - 0x108]
0x126c:   50                     	push eax
0x126d:   e8 2e fe ff ff         	call 0x10a0 <function_10a0>
0x1272:   83 c4 04               	add esp, 4
0x1275:   81 7d f8 00 3d 34 01   	cmp dword ptr [ebp - 8], 0x1343d00
0x127c:   75 0f                  	jne 0x128d <function_120f+0x7e>
0x127e:   8d 83 44 e0 ff ff      	lea eax, [ebx - 0x1fbc]
0x1284:   50                     	push eax
0x1285:   e8 26 fe ff ff         	call 0x10b0 <function_10b0>
0x128a:   83 c4 04               	add esp, 4
0x128d:   b8 00 00 00 00         	mov eax, 0
0x1292:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x1295:   c9                     	leave 
0x1296:   c3                     	ret 
; data inside code section at 0x1297 -- 0x12a0
0x1297:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x12a0 -- 0x12a1
; data inside code section at 0x12a1 -- 0x12a2
0x12a1:   0f                                                 |.               |
; function: function_12a2 at 0x12a2 -- 0x1305
0x12a2:   1e                     	push ds
0x12a3:   fb                     	sti 
0x12a4:   55                     	push ebp
0x12a5:   e8 6b 00 00 00         	call 0x1315 <__x86.get_pc_thunk.bp>
0x12aa:   81 c5 1a 2d 00 00      	add ebp, 0x2d1a
0x12b0:   57                     	push edi
0x12b1:   56                     	push esi
0x12b2:   53                     	push ebx
0x12b3:   83 ec 0c               	sub esp, 0xc
0x12b6:   89 eb                  	mov ebx, ebp
0x12b8:   8b 7c 24 28            	mov edi, dword ptr [esp + 0x28]
0x12bc:   e8 3f fd ff ff         	call 0x1000 <_init>
0x12c1:   8d 9d 04 ff ff ff      	lea ebx, [ebp - 0xfc]
0x12c7:   8d 85 00 ff ff ff      	lea eax, [ebp - 0x100]
0x12cd:   29 c3                  	sub ebx, eax
0x12cf:   c1 fb 02               	sar ebx, 2
0x12d2:   74 29                  	je 0x12fd <function_12a2+0x5b>
0x12d4:   31 f6                  	xor esi, esi
0x12d6:   8d b4 26 00 00 00 00   	lea esi, [esi]
0x12dd:   8d 76 00               	lea esi, [esi]
0x12e0:   83 ec 04               	sub esp, 4
0x12e3:   57                     	push edi
0x12e4:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x12e8:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x12ec:   ff 94 b5 00 ff ff ff   	call dword ptr [ebp + esi*4 - 0x100]
0x12f3:   83 c6 01               	add esi, 1
0x12f6:   83 c4 10               	add esp, 0x10
0x12f9:   39 f3                  	cmp ebx, esi
0x12fb:   75 e3                  	jne 0x12e0 <function_12a2+0x3e>
0x12fd:   83 c4 0c               	add esp, 0xc
0x1300:   5b                     	pop ebx
0x1301:   5e                     	pop esi
0x1302:   5f                     	pop edi
0x1303:   5d                     	pop ebp
0x1304:   c3                     	ret 
; data inside code section at 0x1305 -- 0x1310
0x1305:   8d b4 26 00 00 00 00 8d  74 26 00                  |..&.....t&.     |
; function: __libc_csu_fini at 0x1310 -- 0x1311
; data inside code section at 0x1311 -- 0x1312
0x1311:   0f                                                 |.               |
; function: function_1312 at 0x1312 -- 0x1315
0x1312:   1e                     	push ds
0x1313:   fb                     	sti 
0x1314:   c3                     	ret 
; function: __x86.get_pc_thunk.bp at 0x1315 -- 0x1319
0x1315:   8b 2c 24               	mov ebp, dword ptr [esp]
0x1318:   c3                     	ret 
; section: .fini
; function: _fini at 0x131c -- 0x131d
; data inside code section at 0x131d -- 0x131e
0x131d:   0f                                                 |.               |
; function: function_131e at 0x131e -- 0x1334
0x131e:   1e                     	push ds
0x131f:   fb                     	sti 
0x1320:   53                     	push ebx
0x1321:   83 ec 08               	sub esp, 8
0x1324:   e8 e7 fd ff ff         	call 0x1110 <__x86.get_pc_thunk.bx>
0x1329:   81 c3 9b 2c 00 00      	add ebx, 0x2c9b
0x132f:   83 c4 08               	add esp, 8
0x1332:   5b                     	pop ebx
0x1333:   c3                     	ret 

;;
;; Data Segment
;;

; section: .interp
0x1b4:    2f 6c 69 62 2f 6c 64 2d                            |/lib/ld-        |
0x1bc:    6c 69 6e 75 78 2e 73 6f  2e 32 00                  |linux.so.2.     |   "linux.so.2"
0x1c7:    ??                                                 |?               |
; section: .gnu.hash
0x228:    02 00 00 00 0c 00 00 00  01 00 00 00 05 00 00 00   |................|
0x238:    00 20 00 20 00 00 00 00  0c 00 00 00 ad 4b e3 c0   |. . .........K..|
0x248:    00                                                 |.               |
; section: .dynsym
0x248:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x258:    49 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |I...............|
0x268:    78 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |x........... ...|
0x278:    1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x288:    2c 00 00 00 00 00 00 00  00 00 00 00 11 00 00 00   |,...............|
0x298:    3a 00 00 00 00 00 00 00  00 00 00 00 22 00 00 00   |:..........."...|
0x2a8:    33 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |3...............|
0x2b8:    94 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x2c8:    50 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |P...............|
0x2d8:    1f 00 00 00 00 00 00 00  00 00 00 00 11 00 00 00   |................|
0x2e8:    25 00 00 00 00 00 00 00  00 00 00 00 11 00 00 00   |%...............|
0x2f8:    a3 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x308:    0b 00 00 00 04 20 00 00  04 00 00 00 11 00 12 00   |..... ..........|
0x318:    00                                                 |.               |
; section: .dynstr
0x318:    00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x328:    74 64 69 6e 5f 75 73 65  64 00 67 65 74 73 00 73   |tdin_used.gets.s|
0x338:    74 64 69 6e 00 73 74 64  6f 75 74 00 73 74 64 65   |tdin.stdout.stde|
0x348:    72 72 00 73 79 73 74 65  6d 00 5f 5f 63 78 61 5f   |rr.system.__cxa_|
0x358:    66 69 6e 61 6c 69 7a 65  00 73 65 74 62 75 66 00   |finalize.setbuf.|
0x368:    5f 5f 6c 69 62 63 5f 73  74 61 72 74 5f 6d 61 69   |__libc_start_mai|
0x378:    6e 00 47 4c 49 42 43 5f  32 2e 31 2e 33 00 47 4c   |n.GLIBC_2.1.3.GL|
0x388:    49 42 43 5f 32 2e 30 00  5f 49 54 4d 5f 64 65 72   |IBC_2.0._ITM_der|
0x398:    65 67 69 73 74 65 72 54  4d 43 6c 6f 6e 65 54 61   |egisterTMCloneTa|
0x3a8:    62 6c 65 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |ble.__gmon_start|
0x3b8:    5f 5f 00 5f 49 54 4d 5f  72 65 67 69 73 74 65 72   |__._ITM_register|
0x3c8:    54 4d 43 6c 6f 6e 65 54  61 62 6c 65 00 ??         |TMCloneTable.?  |
; section: .gnu.version
0x3d6:    00 00 02 00 00 00 02 00  02 00 03 00 02 00 00 00   |................|
0x3e6:    02 00 02 00 02 00 00 00  01 00 01                  |...........     |
; section: .gnu.version_r
0x3f0:    01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x400:    73 1f 69 09 00 00 03 00  62 00 00 00 10 00 00 00   |s.i.....b.......|
0x410:    10 69 69 0d 00 00 02 00  6e 00 00 00 00 00 00 00   |.ii.....n.......|
0x420:    c4                                                 |.               |
; section: .rel.dyn
0x420:    c4 3e 00 00 08 00 00 00  c8 3e 00 00 08 00 00 00   |.>.......>......|
0x430:    f8 3f 00 00 08 00 00 00  04 40 00 00 08 00 00 00   |.?.......@......|
0x440:    e0 3f 00 00 06 02 00 00  e4 3f 00 00 06 04 00 00   |.?.......?......|
0x450:    e8 3f 00 00 06 05 00 00  ec 3f 00 00 06 07 00 00   |.?.......?......|
0x460:    f0 3f 00 00 06 09 00 00  f4 3f 00 00 06 0a 00 00   |.?.......?......|
0x470:    fc 3f 00 00 06 0b 00 00  d0                        |.?.......       |
; section: .rel.plt
0x478:    d0 3f 00 00 07 01 00 00  d4 3f 00 00 07 03 00 00   |.?.......?......|
0x488:    d8 3f 00 00 07 06 00 00  dc 3f 00 00 07 08 00 00   |.?.......?......|
0x498:    ??                                                 |?               |
; section: .rodata
0x2000:   03 00 00 00 01 00 02 00  63 61 74 20 66 6c 61 67   |........cat flag|
0x2010:   00 ??                                              |.?              |
; section: .eh_frame_hdr
0x2014:   01 1b 03 3b 48 00 00 00  08 00 00 00 1c f0 ff ff   |...;H...........|
0x2024:   78 00 00 00 6c f0 ff ff  9c 00 00 00 7c f0 ff ff   |x...l.......|...|
0x2034:   b0 00 00 00 bc f0 ff ff  64 00 00 00 f9 f1 ff ff   |........d.......|
0x2044:   c4 00 00 00 8c f2 ff ff  e8 00 00 00 fc f2 ff ff   |................|
0x2054:   34 01 00 00 01 f3 ff ff  48 01 00 00 14            |4.......H....   |
; section: .eh_frame
0x2060:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x2070:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x2080:   50 f0 ff ff 3a 00 00 00  00 44 07 08 20 00 00 00   |P...:....D.. ...|
0x2090:   30 00 00 00 9c ef ff ff  50 00 00 00 00 0e 08 46   |0.......P......F|
0x20a0:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 39 2a 32 24 22   |..J..t.x.?.9*2$"|
0x20b0:   10 00 00 00 54 00 00 00  c8 ef ff ff 10 00 00 00   |....T...........|
0x20c0:   00 00 00 00 10 00 00 00  68 00 00 00 c4 ef ff ff   |........h.......|
0x20d0:   40 00 00 00 00 00 00 00  20 00 00 00 7c 00 00 00   |@....... ...|...|
0x20e0:   2d f1 ff ff 8a 00 00 00  00 45 0e 08 85 02 42 0d   |-........E....B.|
0x20f0:   05 47 83 03 02 7b c5 c3  0c 04 04 00 48 00 00 00   |.G...{......H...|
0x2100:   a0 00 00 00 9c f1 ff ff  65 00 00 00 00 45 0e 08   |........e....E..|
0x2110:   85 02 4c 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..L....A....A...|
0x2120:   05 43 0e 20 6d 0e 24 41  0e 28 44 0e 2c 44 0e 30   |.C. m.$A.(D.,D.0|
0x2130:   4d 0e 20 47 0e 14 41 c3  0e 10 41 c6 0e 0c 41 c7   |M. G..A...A...A.|
0x2140:   0e 08 41 c5 0e 04 00 00  10 00 00 00 ec 00 00 00   |..A.............|
0x2150:   c0 f1 ff ff 05 00 00 00  00 00 00 00 10 00 00 00   |................|
0x2160:   00 01 00 00 b1 f1 ff ff  04 00 00 00 00 00 00 00   |................|
0x2170:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x3ec4:   00 12 00 00 b0                                     |.....           |
; section: .fini_array
0x3ec8:   b0 11 00 00 01                                     |.....           |
; section: .dynamic
0x3ecc:   01 00 00 00 01 00 00 00  0c 00 00 00 00 10 00 00   |................|
0x3edc:   0d 00 00 00 1c 13 00 00  19 00 00 00 c4 3e 00 00   |.............>..|
0x3eec:   1b 00 00 00 04 00 00 00  1a 00 00 00 c8 3e 00 00   |.............>..|
0x3efc:   1c 00 00 00 04 00 00 00  f5 fe ff 6f 28 02 00 00   |...........o(...|
0x3f0c:   05 00 00 00 18 03 00 00  06 00 00 00 48 02 00 00   |............H...|
0x3f1c:   0a 00 00 00 bd 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x3f2c:   15 00 00 00 00 00 00 00  03 00 00 00 c4 3f 00 00   |.............?..|
0x3f3c:   02 00 00 00 20 00 00 00  14 00 00 00 11 00 00 00   |.... ...........|
0x3f4c:   17 00 00 00 78 04 00 00  11 00 00 00 20 04 00 00   |....x....... ...|
0x3f5c:   12 00 00 00 58 00 00 00  13 00 00 00 08 00 00 00   |....X...........|
0x3f6c:   1e 00 00 00 08 00 00 00  fb ff ff 6f 01 00 00 08   |...........o....|
0x3f7c:   fe ff ff 6f f0 03 00 00  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x3f8c:   f0 ff ff 6f d6 03 00 00  fa ff ff 6f 04 00 00 00   |...o.......o....|
0x3f9c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3fac:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3fbc:   00 00 00 00 00 00 00 00  cc                        |.........       |
; section: .got
0x3fc4:   cc 3e 00 00 00 00 00 00  00 00 00 00 40 10 00 00   |.>..........@...|
0x3fd4:   50 10 00 00 60 10 00 00  70 10 00 00 00 00 00 00   |P...`...p.......|
0x3fe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3ff4:   00 00 00 00 0d 12 00 00  00 00 00 00 00            |.............   |
; section: .data
0x4000:   00 00 00 00 04 40 00 00  00                        |.....@...       |
