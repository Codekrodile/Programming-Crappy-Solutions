;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2020 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2020-07-04 04:11:44
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x5f0 -- 0x607
0x5f0:      48 83 ec 08                     	sub rsp, 8
0x5f4:      48 8b 05 ed 09 20 00            	mov rax, qword ptr [rip + 0x2009ed]
0x5fb:      48 85 c0                        	test rax, rax
0x5fe:      74 02                           	je 0x602 <_init+0x12>
0x600:      ff d0                           	call rax <__gmon_start__>
0x602:      48 83 c4 08                     	add rsp, 8
0x606:      c3                              	ret 
; section: .plt
; data inside code section at 0x610 -- 0x620
0x610:      ff 35 8a 09 20 00 ff 25  8c 09 20 00 0f 1f 40 00   |.5.. ..%.. ...@.|
; function: function_620 at 0x620 -- 0x626
0x620:      ff 25 8a 09 20 00               	jmp qword ptr [rip + 0x20098a] <strcpy>
; data inside code section at 0x626 -- 0x630
0x626:      68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_630 at 0x630 -- 0x636
0x630:      ff 25 82 09 20 00               	jmp qword ptr [rip + 0x200982] <puts>
; data inside code section at 0x636 -- 0x640
0x636:      68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_640 at 0x640 -- 0x646
0x640:      ff 25 7a 09 20 00               	jmp qword ptr [rip + 0x20097a] <strlen>
; data inside code section at 0x646 -- 0x650
0x646:      68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_650 at 0x650 -- 0x656
0x650:      ff 25 72 09 20 00               	jmp qword ptr [rip + 0x200972] <__stack_chk_fail>
; data inside code section at 0x656 -- 0x660
0x656:      68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_660 at 0x660 -- 0x666
0x660:      ff 25 6a 09 20 00               	jmp qword ptr [rip + 0x20096a] <printf>
; data inside code section at 0x666 -- 0x670
0x666:      68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_670 at 0x670 -- 0x676
0x670:      ff 25 82 09 20 00               	jmp qword ptr [rip + 0x200982] <__cxa_finalize>
; data inside code section at 0x676 -- 0x678
0x676:      66 90                                              |f.              |
; section: .text
; function: _start at 0x680 -- 0x6ab
0x680:      31 ed                           	xor ebp, ebp
0x682:      49 89 d1                        	mov r9, rdx
0x685:      5e                              	pop rsi
0x686:      48 89 e2                        	mov rdx, rsp
0x689:      48 83 e4 f0                     	and rsp, 0xfffffffffffffff0
0x68d:      50                              	push rax
0x68e:      54                              	push rsp
0x68f:      4c 8d 05 0a 03 00 00            	lea r8, [rip + 0x30a]
0x696:      48 8d 0d 93 02 00 00            	lea rcx, [rip + 0x293]
0x69d:      48 8d 3d e6 00 00 00            	lea rdi, [rip + 0xe6]
0x6a4:      ff 15 36 09 20 00               	call qword ptr [rip + 0x200936] <__libc_start_main>
0x6aa:      f4                              	hlt 
; data inside code section at 0x6ab -- 0x6b0
0x6ab:      0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x6b0 -- 0x6e2
0x6b0:      48 8d 3d 59 09 20 00            	lea rdi, [rip + 0x200959]
0x6b7:      55                              	push rbp
0x6b8:      48 8d 05 51 09 20 00            	lea rax, [rip + 0x200951]
0x6bf:      48 39 f8                        	cmp rax, rdi
0x6c2:      48 89 e5                        	mov rbp, rsp
0x6c5:      74 19                           	je 0x6e0 <deregister_tm_clones+0x30>
0x6c7:      48 8b 05 0a 09 20 00            	mov rax, qword ptr [rip + 0x20090a]
0x6ce:      48 85 c0                        	test rax, rax
0x6d1:      74 0d                           	je 0x6e0 <deregister_tm_clones+0x30>
0x6d3:      5d                              	pop rbp
0x6d4:      ff e0                           	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x6d6 -- 0x6e0
0x6d6:      66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6e0:      5d                              	pop rbp
0x6e1:      c3                              	ret 
; data inside code section at 0x6e2 -- 0x6f0
0x6e2:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x6f0 -- 0x732
0x6f0:      48 8d 3d 19 09 20 00            	lea rdi, [rip + 0x200919]
0x6f7:      48 8d 35 12 09 20 00            	lea rsi, [rip + 0x200912]
0x6fe:      55                              	push rbp
0x6ff:      48 29 fe                        	sub rsi, rdi
0x702:      48 89 e5                        	mov rbp, rsp
0x705:      48 c1 fe 03                     	sar rsi, 3
0x709:      48 89 f0                        	mov rax, rsi
0x70c:      48 c1 e8 3f                     	shr rax, 0x3f
0x710:      48 01 c6                        	add rsi, rax
0x713:      48 d1 fe                        	sar rsi, 1
0x716:      74 18                           	je 0x730 <register_tm_clones+0x40>
0x718:      48 8b 05 d1 08 20 00            	mov rax, qword ptr [rip + 0x2008d1]
0x71f:      48 85 c0                        	test rax, rax
0x722:      74 0c                           	je 0x730 <register_tm_clones+0x40>
0x724:      5d                              	pop rbp
0x725:      ff e0                           	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x727 -- 0x730
0x727:      66 0f 1f 84 00 00 00 00  00                        |f........       |
0x730:      5d                              	pop rbp
0x731:      c3                              	ret 
; data inside code section at 0x732 -- 0x740
0x732:      0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x740 -- 0x77a
0x740:      80 3d c9 08 20 00 00            	cmp byte ptr [rip + 0x2008c9], 0
0x747:      75 2f                           	jne 0x778 <__do_global_dtors_aux+0x38>
0x749:      48 83 3d a7 08 20 00 00         	cmp qword ptr [rip + 0x2008a7], 0
0x751:      55                              	push rbp
0x752:      48 89 e5                        	mov rbp, rsp
0x755:      74 0c                           	je 0x763 <__do_global_dtors_aux+0x23>
0x757:      48 8b 3d aa 08 20 00            	mov rdi, qword ptr [rip + 0x2008aa]
0x75e:      e8 0d ff ff ff                  	call 0x670 <__cxa_finalize>
0x763:      e8 48 ff ff ff                  	call 0x6b0 <deregister_tm_clones>
0x768:      c6 05 a1 08 20 00 01            	mov byte ptr [rip + 0x2008a1], 1
0x76f:      5d                              	pop rbp
0x770:      c3                              	ret 
; data inside code section at 0x771 -- 0x778
0x771:      0f 1f 80 00 00 00 00                               |.......         |
0x778:      f3 c3                           	ret 
; data inside code section at 0x77a -- 0x780
0x77a:      66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0x780 -- 0x78a
0x780:      55                              	push rbp
0x781:      48 89 e5                        	mov rbp, rsp
0x784:      5d                              	pop rbp
0x785:      e9 66 ff ff ff                  	jmp 0x6f0 <register_tm_clones>
; function: main at 0x78a -- 0x929
0x78a:      55                              	push rbp
0x78b:      48 89 e5                        	mov rbp, rsp
0x78e:      53                              	push rbx
0x78f:      48 81 ec b8 00 00 00            	sub rsp, 0xb8
0x796:      89 bd 4c ff ff ff               	mov dword ptr [rbp - 0xb4], edi
0x79c:      48 89 b5 40 ff ff ff            	mov qword ptr [rbp - 0xc0], rsi
0x7a3:      64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x7ac:      48 89 45 e8                     	mov qword ptr [rbp - 0x18], rax
0x7b0:      31 c0                           	xor eax, eax
0x7b2:      83 bd 4c ff ff ff 01            	cmp dword ptr [rbp - 0xb4], 1
0x7b9:      7f 16                           	jg 0x7d1 <main+0x47>
0x7bb:      48 8d 3d f6 01 00 00            	lea rdi, [rip + 0x1f6]
0x7c2:      e8 69 fe ff ff                  	call 0x630 <puts>
0x7c7:      b8 01 00 00 00                  	mov eax, 1
0x7cc:      e9 3a 01 00 00                  	jmp 0x90b <main+0x181>
0x7d1:      83 bd 4c ff ff ff 02            	cmp dword ptr [rbp - 0xb4], 2
0x7d8:      7e 16                           	jle 0x7f0 <main+0x66>
0x7da:      48 8d 3d ff 01 00 00            	lea rdi, [rip + 0x1ff]
0x7e1:      e8 4a fe ff ff                  	call 0x630 <puts>
0x7e6:      b8 01 00 00 00                  	mov eax, 1
0x7eb:      e9 1b 01 00 00                  	jmp 0x90b <main+0x181>
0x7f0:      48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x7f7:      48 83 c0 08                     	add rax, 8
0x7fb:      48 8b 00                        	mov rax, qword ptr [rax]
0x7fe:      48 89 c7                        	mov rdi, rax
0x801:      e8 3a fe ff ff                  	call 0x640 <strlen>
0x806:      89 85 5c ff ff ff               	mov dword ptr [rbp - 0xa4], eax
0x80c:      83 bd 5c ff ff ff 21            	cmp dword ptr [rbp - 0xa4], 0x21
0x813:      74 16                           	je 0x82b <main+0xa1>
0x815:      48 8d 3d da 01 00 00            	lea rdi, [rip + 0x1da]
0x81c:      e8 0f fe ff ff                  	call 0x630 <puts>
0x821:      b8 01 00 00 00                  	mov eax, 1
0x826:      e9 e0 00 00 00                  	jmp 0x90b <main+0x181>
0x82b:      48 8b 85 40 ff ff ff            	mov rax, qword ptr [rbp - 0xc0]
0x832:      48 83 c0 08                     	add rax, 8
0x836:      48 8b 10                        	mov rdx, qword ptr [rax]
0x839:      48 8d 45 90                     	lea rax, [rbp - 0x70]
0x83d:      48 89 d6                        	mov rsi, rdx
0x840:      48 89 c7                        	mov rdi, rax
0x843:      e8 d8 fd ff ff                  	call 0x620 <strcpy>
0x848:      48 b8 04 1e 76 24 6a 6a 48 01   	movabs rax, 0x1486a6a24761e04
0x852:      48 ba 74 5f 3c 10 20 3d 11 14   	movabs rdx, 0x14113d20103c5f74
0x85c:      48 89 45 c0                     	mov qword ptr [rbp - 0x40], rax
0x860:      48 89 55 c8                     	mov qword ptr [rbp - 0x38], rdx
0x864:      48 b8 69 0c 06 13 0b 4a 2f 13   	movabs rax, 0x132f4a0b13060c69
0x86e:      48 ba 05 62 1a 63 79 46 05 3b   	movabs rdx, 0x3b054679631a6205
0x878:      48 89 45 d0                     	mov qword ptr [rbp - 0x30], rax
0x87c:      48 89 55 d8                     	mov qword ptr [rbp - 0x28], rdx
0x880:      66 c7 45 e0 3c 00               	mov word ptr [rbp - 0x20], 0x3c
0x886:      c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [rbp - 0xa8], 0
0x890:      eb 3f                           	jmp 0x8d1 <main+0x147>
0x892:      8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x898:      48 98                           	cdqe 
0x89a:      0f b6 54 05 c0                  	movzx edx, byte ptr [rbp + rax - 0x40]
0x89f:      8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x8a5:      48 98                           	cdqe 
0x8a7:      0f b6 44 05 90                  	movzx eax, byte ptr [rbp + rax - 0x70]
0x8ac:      31 d0                           	xor eax, edx
0x8ae:      88 85 57 ff ff ff               	mov byte ptr [rbp - 0xa9], al
0x8b4:      8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x8ba:      48 98                           	cdqe 
0x8bc:      0f b6 95 57 ff ff ff            	movzx edx, byte ptr [rbp - 0xa9]
0x8c3:      88 94 05 60 ff ff ff            	mov byte ptr [rbp + rax - 0xa0], dl
0x8ca:      83 85 58 ff ff ff 01            	add dword ptr [rbp - 0xa8], 1
0x8d1:      8b 85 58 ff ff ff               	mov eax, dword ptr [rbp - 0xa8]
0x8d7:      48 63 d8                        	movsxd rbx, eax
0x8da:      48 8d 45 c0                     	lea rax, [rbp - 0x40]
0x8de:      48 89 c7                        	mov rdi, rax
0x8e1:      e8 5a fd ff ff                  	call 0x640 <strlen>
0x8e6:      48 39 c3                        	cmp rbx, rax
0x8e9:      72 a7                           	jb 0x892 <main+0x108>
0x8eb:      48 8d 85 60 ff ff ff            	lea rax, [rbp - 0xa0]
0x8f2:      48 89 c6                        	mov rsi, rax
0x8f5:      48 8d 3d 15 01 00 00            	lea rdi, [rip + 0x115]
0x8fc:      b8 00 00 00 00                  	mov eax, 0
0x901:      e8 5a fd ff ff                  	call 0x660 <printf>
0x906:      b8 00 00 00 00                  	mov eax, 0
0x90b:      48 8b 4d e8                     	mov rcx, qword ptr [rbp - 0x18]
0x90f:      64 48 33 0c 25 28 00 00 00      	xor rcx, qword ptr fs:[0x28]
0x918:      74 05                           	je 0x91f <main+0x195>
0x91a:      e8 31 fd ff ff                  	call 0x650 <__stack_chk_fail>
0x91f:      48 81 c4 b8 00 00 00            	add rsp, 0xb8
0x926:      5b                              	pop rbx
0x927:      5d                              	pop rbp
0x928:      c3                              	ret 
; data inside code section at 0x929 -- 0x930
0x929:      0f 1f 80 00 00 00 00                               |.......         |
; function: __libc_csu_init at 0x930 -- 0x995
0x930:      41 57                           	push r15
0x932:      41 56                           	push r14
0x934:      49 89 d7                        	mov r15, rdx
0x937:      41 55                           	push r13
0x939:      41 54                           	push r12
0x93b:      4c 8d 25 56 04 20 00            	lea r12, [rip + 0x200456]
0x942:      55                              	push rbp
0x943:      48 8d 2d 56 04 20 00            	lea rbp, [rip + 0x200456]
0x94a:      53                              	push rbx
0x94b:      41 89 fd                        	mov r13d, edi
0x94e:      49 89 f6                        	mov r14, rsi
0x951:      4c 29 e5                        	sub rbp, r12
0x954:      48 83 ec 08                     	sub rsp, 8
0x958:      48 c1 fd 03                     	sar rbp, 3
0x95c:      e8 8f fc ff ff                  	call 0x5f0 <_init>
0x961:      48 85 ed                        	test rbp, rbp
0x964:      74 20                           	je 0x986 <__libc_csu_init+0x56>
0x966:      31 db                           	xor ebx, ebx
0x968:      0f 1f 84 00 00 00 00 00         	nop dword ptr [rax + rax]
0x970:      4c 89 fa                        	mov rdx, r15
0x973:      4c 89 f6                        	mov rsi, r14
0x976:      44 89 ef                        	mov edi, r13d
0x979:      41 ff 14 dc                     	call qword ptr [r12 + rbx*8]
0x97d:      48 83 c3 01                     	add rbx, 1
0x981:      48 39 dd                        	cmp rbp, rbx
0x984:      75 ea                           	jne 0x970 <__libc_csu_init+0x40>
0x986:      48 83 c4 08                     	add rsp, 8
0x98a:      5b                              	pop rbx
0x98b:      5d                              	pop rbp
0x98c:      41 5c                           	pop r12
0x98e:      41 5d                           	pop r13
0x990:      41 5e                           	pop r14
0x992:      41 5f                           	pop r15
0x994:      c3                              	ret 
; data inside code section at 0x995 -- 0x9a0
0x995:      90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x9a0 -- 0x9a2
0x9a0:      f3 c3                           	ret 
; section: .fini
; function: _fini at 0x9a4 -- 0x9ad
0x9a4:      48 83 ec 08                     	sub rsp, 8
0x9a8:      48 83 c4 08                     	add rsp, 8
0x9ac:      c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      01 00 00 00 01 00 00 00  01 00 00 00 00 00 00 00   |................|
0x2a8:      00 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .dynsym
0x2b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2c8:      00 00 00 00 00 00 00 00  6d 00 00 00 20 00 00 00   |........m... ...|
0x2d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e8:      0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8:      00 00 00 00 00 00 00 00  12 00 00 00 12 00 00 00   |................|
0x308:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x318:      2f 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |/...............|
0x328:      00 00 00 00 00 00 00 00  17 00 00 00 12 00 00 00   |................|
0x338:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x348:      28 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |(...............|
0x358:      00 00 00 00 00 00 00 00  45 00 00 00 12 00 00 00   |........E.......|
0x368:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x378:      89 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x388:      00 00 00 00 00 00 00 00  98 00 00 00 20 00 00 00   |............ ...|
0x398:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3a8:      36 00 00 00 22 00 00 00  00 00 00 00 00 00 00 00   |6..."...........|
0x3b8:      00 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x3c0:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 74 72 63 70   |.libc.so.6.strcp|
0x3d0:      79 00 70 75 74 73 00 5f  5f 73 74 61 63 6b 5f 63   |y.puts.__stack_c|
0x3e0:      68 6b 5f 66 61 69 6c 00  70 72 69 6e 74 66 00 73   |hk_fail.printf.s|
0x3f0:      74 72 6c 65 6e 00 5f 5f  63 78 61 5f 66 69 6e 61   |trlen.__cxa_fina|
0x400:      6c 69 7a 65 00 5f 5f 6c  69 62 63 5f 73 74 61 72   |lize.__libc_star|
0x410:      74 5f 6d 61 69 6e 00 47  4c 49 42 43 5f 32 2e 34   |t_main.GLIBC_2.4|
0x420:      00 47 4c 49 42 43 5f 32  2e 32 2e 35 00 5f 49 54   |.GLIBC_2.2.5._IT|
0x430:      4d 5f 64 65 72 65 67 69  73 74 65 72 54 4d 43 6c   |M_deregisterTMCl|
0x440:      6f 6e 65 54 61 62 6c 65  00 5f 5f 67 6d 6f 6e 5f   |oneTable.__gmon_|
0x450:      73 74 61 72 74 5f 5f 00  5f 49 54 4d 5f 72 65 67   |start__._ITM_reg|
0x460:      69 73 74 65 72 54 4d 43  6c 6f 6e 65 54 61 62 6c   |isterTMCloneTabl|
0x470:      65 00 00                                           |e..             |
; section: .gnu.version
0x472:      00 00 00 00 02 00 02 00  02 00 03 00 02 00 02 00   |................|
0x482:      00 00 00 00 02 00 01                               |.......         |
; section: .gnu.version_r
0x488:      01 00 02 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x498:      14 69 69 0d 00 00 03 00  57 00 00 00 10 00 00 00   |.ii.....W.......|
0x4a8:      75 1a 69 09 00 00 02 00  61 00 00 00 00 00 00 00   |u.i.....a.......|
0x4b8:      98                                                 |.               |
; section: .rela.dyn
0x4b8:      98 0d 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.. .............|
0x4c8:      80 07 00 00 00 00 00 00  a0 0d 20 00 00 00 00 00   |.......... .....|
0x4d8:      08 00 00 00 00 00 00 00  40 07 00 00 00 00 00 00   |........@.......|
0x4e8:      08 10 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.. .............|
0x4f8:      08 10 20 00 00 00 00 00  d8 0f 20 00 00 00 00 00   |.. ....... .....|
0x508:      06 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0x518:      e0 0f 20 00 00 00 00 00  06 00 00 00 07 00 00 00   |.. .............|
0x528:      00 00 00 00 00 00 00 00  e8 0f 20 00 00 00 00 00   |.......... .....|
0x538:      06 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   |................|
0x548:      f0 0f 20 00 00 00 00 00  06 00 00 00 09 00 00 00   |.. .............|
0x558:      00 00 00 00 00 00 00 00  f8 0f 20 00 00 00 00 00   |.......... .....|
0x568:      06 00 00 00 0a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x578:      b0                                                 |.               |
; section: .rela.plt
0x578:      b0 0f 20 00 00 00 00 00  07 00 00 00 02 00 00 00   |.. .............|
0x588:      00 00 00 00 00 00 00 00  b8 0f 20 00 00 00 00 00   |.......... .....|
0x598:      07 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5a8:      c0 0f 20 00 00 00 00 00  07 00 00 00 04 00 00 00   |.. .............|
0x5b8:      00 00 00 00 00 00 00 00  c8 0f 20 00 00 00 00 00   |.......... .....|
0x5c8:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5d8:      d0 0f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   |.. .............|
0x5e8:      00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0x9b0:      01 00 02 00 00 00 00 00                            |........        |
0x9b8:      49 6e 73 75 66 66 69 63  69 65 6e 74 20 61 72 67   |Insufficient arg|   "Insufficient arguments. Gimme moarrrrrr"
0x9c8:      75 6d 65 6e 74 73 2e 20  47 69 6d 6d 65 20 6d 6f   |uments. Gimme mo|
0x9d8:      61 72 72 72 72 72 72 00                            |arrrrrr.        |
0x9e0:      49 20 61 6d 20 6f 76 65  72 77 68 65 6c 6d 65 64   |I am overwhelmed|   "I am overwhelmed! @.@"
0x9f0:      21 20 40 2e 40 00                                  |! @.@.          |
0x9f6:      33 33 20 69 73 20 74 68  65 20 6d 61 67 69 63 20   |33 is the magic |   "33 is the magic number! ;)"
0xa06:      6e 75 6d 62 65 72 21 20  3b 29 00                  |number! ;).     |
0xa11:      59 6f 75 72 20 66 6c 61  67 20 69 73 3a 20 25 73   |Your flag is: %s|   "Your flag is: %s\n"
0xa21:      0a 00                                              |..              |
0xa23:      ??                                                 |?               |
; section: .eh_frame_hdr
0xa24:      01 1b 03 3b 38 00 00 00  06 00 00 00 ec fb ff ff   |...;8...........|
0xa34:      84 00 00 00 4c fc ff ff  ac 00 00 00 5c fc ff ff   |....L.......\...|
0xa44:      54 00 00 00 66 fd ff ff  c4 00 00 00 0c ff ff ff   |T...f...........|
0xa54:      ec 00 00 00 7c ff ff ff  34 01 00 00 14            |....|...4....   |
; section: .eh_frame
0xa60:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xa70:      1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0xa80:      00 fc ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |....+...........|
0xa90:      14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0xaa0:      1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0xab0:      60 fb ff ff 60 00 00 00  00 0e 10 46 0e 18 4a 0f   |`...`......F..J.|
0xac0:      0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0xad0:      14 00 00 00 44 00 00 00  98 fb ff ff 08 00 00 00   |....D...........|
0xae0:      00 00 00 00 00 00 00 00  24 00 00 00 5c 00 00 00   |........$...\...|
0xaf0:      9a fc ff ff 9f 01 00 00  00 41 0e 10 86 02 43 0d   |.........A....C.|
0xb00:      06 48 83 03 03 92 01 0c  07 08 00 00 00 00 00 00   |.H..............|
0xb10:      44 00 00 00 84 00 00 00  18 fe ff ff 65 00 00 00   |D...........e...|
0xb20:      00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0xb30:      42 0e 28 8c 05 48 0e 30  86 06 48 0e 38 83 07 4d   |B.(..H.0..H.8..M|
0xb40:      0e 40 72 0e 38 41 0e 30  41 0e 28 42 0e 20 42 0e   |.@r.8A.0A.(B. B.|
0xb50:      18 42 0e 10 42 0e 08 00  10 00 00 00 cc 00 00 00   |.B..B...........|
0xb60:      40 fe ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |@...............|
0xb70:      ??                                                 |?               |
; section: .init_array
0x200d98:   80 07 00 00 00 00 00 00  40                        |........@       |
; section: .fini_array
0x200da0:   40 07 00 00 00 00 00 00  01                        |@........       |
; section: .dynamic
0x200da8:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x200db8:   0c 00 00 00 00 00 00 00  f0 05 00 00 00 00 00 00   |................|
0x200dc8:   0d 00 00 00 00 00 00 00  a4 09 00 00 00 00 00 00   |................|
0x200dd8:   19 00 00 00 00 00 00 00  98 0d 20 00 00 00 00 00   |.......... .....|
0x200de8:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200df8:   1a 00 00 00 00 00 00 00  a0 0d 20 00 00 00 00 00   |.......... .....|
0x200e08:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200e18:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x200e28:   05 00 00 00 00 00 00 00  c0 03 00 00 00 00 00 00   |................|
0x200e38:   06 00 00 00 00 00 00 00  b8 02 00 00 00 00 00 00   |................|
0x200e48:   0a 00 00 00 00 00 00 00  b2 00 00 00 00 00 00 00   |................|
0x200e58:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x200e68:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200e78:   03 00 00 00 00 00 00 00  98 0f 20 00 00 00 00 00   |.......... .....|
0x200e88:   02 00 00 00 00 00 00 00  78 00 00 00 00 00 00 00   |........x.......|
0x200e98:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x200ea8:   17 00 00 00 00 00 00 00  78 05 00 00 00 00 00 00   |........x.......|
0x200eb8:   07 00 00 00 00 00 00 00  b8 04 00 00 00 00 00 00   |................|
0x200ec8:   08 00 00 00 00 00 00 00  c0 00 00 00 00 00 00 00   |................|
0x200ed8:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x200ee8:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x200ef8:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x200f08:   fe ff ff 6f 00 00 00 00  88 04 00 00 00 00 00 00   |...o............|
0x200f18:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x200f28:   f0 ff ff 6f 00 00 00 00  72 04 00 00 00 00 00 00   |...o....r.......|
0x200f38:   f9 ff ff 6f 00 00 00 00  03 00 00 00 00 00 00 00   |...o............|
0x200f48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f58:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f68:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f78:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f88:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200f98:   a8                                                 |.               |
; section: .got
0x200f98:   a8 0d 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |.. .............|
0x200fa8:   00 00 00 00 00 00 00 00  26 06 00 00 00 00 00 00   |........&.......|
0x200fb8:   36 06 00 00 00 00 00 00  46 06 00 00 00 00 00 00   |6.......F.......|
0x200fc8:   56 06 00 00 00 00 00 00  66 06 00 00 00 00 00 00   |V.......f.......|
0x200fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x200ff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x201000:   00 00 00 00 00 00 00 00  08 10 20 00 00 00 00 00   |.......... .....|
0x201010:   00                                                 |.               |
